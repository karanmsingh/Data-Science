[Workspace loaded from ~/.RData]

> #Scatterplot
> library(ggplot2)
> #simple 2D scatter plot with qplot -
> qplot(mpg, wt, data=mtcars)
> #with ggplot
> ggplot(mtcars,aes(x=mpg, y=wt))+geom_point(shape=1)
> ggplot(mtcars,aes(x=mpg, y=wt))+geom_point(shape=19)
> ggplot(mtcars,aes(x=mpg, y=wt))+geom_point(shape=2)
> ggplot(mtcars,aes(x=mpg, y=wt))+geom_point(shape=20)
> ggplot(mtcars,aes(x=mpg, y=wt, shape=cyl)) + geom_point() + scale_shape_identity()
> #Didn't work because we need to have categorical instead of numerical data 
> #therefore create factors for the cylinders
> mtcars$cylFactor <- factor(mtcars$cyl)
> ggplot(mtcars,aes(x=mpg, y=wt, shape=cylFactor)) + geom_point() + scale_shape_identity()
> ggplot(mtcars,aes(x=mpg,y=wt,shape = cylFactor)) + geom_point()
> ggplot(mtcars,aes(x=mpg,y=wt)) + geom_point(shape=19, colour="red")
> ggplot(mtcars, aes(x=mpg, y=wt, color=cyl)) + geom_point(shape=19)
> ggplot(mtcars, aes(x=mpg,y=wt,color=cylFactor))+geom_point(shape=19)
> ggplot(mtcars, aes(x=mpg, y=wt, color=cylFactor)) + geom_point(shape=19) + labs(colours = "Cylinders")
> ggplot(mtcars,aes(x=mpg,y=wt,color = cylFactor)) + geom_point(shape=19) + labs(colour = "Cylinders")
> ggplot(mtcars,aes(x=mpg,y=wt,color = cylFactor)) + geom_point(shape=19) + xlab("Miles per Galon") + ylab("Weight") + labs(colour = "Cylinders") + ggtitle("Scatterplot")
> 
> #Line Graph
> ?EuStockMarkets
> #Observations are of type matrix and ggplot2 does not work with it. THerefore, a dataframe is created from this.
> EuStockDF <- as.data.frame(EuStockMarkets)
> head(EuStockDF)
      DAX    SMI    CAC   FTSE
1 1628.75 1678.1 1772.8 2443.6
2 1613.63 1688.5 1750.5 2460.2
3 1606.51 1678.6 1718.0 2448.2
4 1621.04 1684.1 1708.1 2470.4
5 1618.16 1686.6 1723.1 2484.7
6 1610.61 1671.6 1714.3 2466.8
> ggplot(EuStockDF, aes(x=c(1:nrow(EuStockDF)), y=DAX)) + geom_line()
> ggplot(EuStockDF, aes(x=c(1:nrow(EuStockDF)), y=DAX)) + geom_line(size=1.5) + labs(x="Stocks")
> ggplot(EuStockDF, aes(x=c(1:nrow(EuStockDF)), y=DAX)) + geom_line(size=1.5, colour="blue") + labs(x="Time", y="Stocks")
> dax_smi_plot <- ggplot() +
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = DAX), size = 1.5, colour="light blue") +
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = SMI), size = 1.5, colour = "red") +
+     labs(x = "Time", y = "Stocks")
> print(dax_smi_plot)
> dax_smi_plot <- ggplot() +
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = DAX), size = 1.5, colour="light blue") +
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = SMI), size = 1.5, colour = "light red") +
+     labs(x = "Time", y = "Stocks")
> print(dax_smi_plot)
Error in grDevices::col2rgb(colour, TRUE) : 
  invalid color name 'light red'
> all_stocks <- ggplot() +
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = DAX), size=1, colour="light blue") +
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = SMI), size =1, colour = "red") + 
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = CAC), size =1, colour = "purple") + 
+     geom_line(data = EuStockDF,aes(x=c(1:nrow(EuStockDF)), y = FTSE), size =1, colour = "green") +
+     labs(x = "Time", y = "Stocks")
> print(all_stocks)
> legend_stocks <- all_stocks + xlab("Days") + ylab("Price") + ggtitle("Eu Stocks")
> print(legend_stocks)
> 
> #Regression line
> 
> #linear
> ggplot(mtcars, aes)
Error: Mapping should be created with `aes() or `aes_()`.
> ggplot(mtcars, aes(x=mpg, y=wt)) + geom_point(shape=19) + geom_smooth(method = "lm", se = FALSE, color="red")
> #se = TRUE  -> confidence interval appear (default = true)
> ggplot(mtcars,aes(x=mpg,y=wt,color = cylFactor)) + geom_point(shape=19) + geom_smooth(method="lm", se= TRUE, color = "red")
> ggplot(mtcars,aes(x=mpg,y=wt,color = cylFactor)) + geom_point(shape=19) + 
+     geom_smooth(method="lm", se= TRUE, color = "red") + xlab("Miles per Gallon ") + 
+     ylab("Weight") +  labs(colour = "Cylinders") + ggtitle("Linear Regression")
> ggplot(mtcars,aes(x=mpg,y=wt,color = cylFactor)) + geom_point(shape=19) + 
+     geom_smooth(method="auto", se= TRUE, color = "red") + xlab("Miles per Gallon ") + 
+     ylab("Weight") +  labs(colour = "Cylinders") + ggtitle("Gaussian Regression")
`geom_smooth()` using method = 'loess' and formula 'y ~ x'